{"version":3,"sources":["components/layout/KitchenButton.js","components/layout/Navbar.js","components/Dashboard/ClientMenu.js","components/Dashboard/ClientListOrder.js","components/Dashboard/ClientBill.js","components/Dashboard/ClientOrder.js","store/actions/orderActions.js","components/Dashboard/Dashboard.js","components/Kitchen/KitchenOrder.js","components/Kitchen/Kitchen.js","App.js","serviceWorker.js","store/reducers/orderReducer.js","store/reducers/rootReducer.js","fbConfig.js","index.js"],"names":["KitchenButton","react_default","a","createElement","className","NavLink","to","Navbar","Link","src","width","height","alt","layout_KitchenButton","Component","ClientMenu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","plates","toShow","handleBreakfastButton","bind","assertThisInitialized","handleLunchButton","e","preventDefault","setState","objectSpread","filter","plate","type","_this2","onClick","map","i","key","name","cost","props","items","ClientListOrder","deleteItem","alert","orderList","item","href","ClientBill","orderResult","reduce","accum","currentValue","parseInt","ClientOrder","handleChange","target","value","food","order","handleData","addOrder","onSubmit","onChange","Dashboard_ClientListOrder","Dashboard_ClientBill","connect","dispatch","getState","_ref","getFirebase","getFirestore","collection","add","then","catch","err","Dashboard","_Component","handleFood","inherits","createClass","concat","Dashboard_ClientMenu","Dashboard_ClientOrder","KitchenOrder","orders","id","join","Kitchen","Kitchen_KitchenOrder","compose","firestore","ordered","firestoreConnect","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","initState","clientName","orderReducer","arguments","length","undefined","action","console","log","rootReducer","combineReducers","firestoreReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7a2ae93.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst KitchenButton = () => {\n    return(\n        <div className=\"form-inline my-2 my-lg-0\">\n            <NavLink to='/kitchen' className=\"btn btn-success my-2 my-lg-0\">\n                Cocina\n            </NavLink>\n        </div>\n    )\n}\nexport default KitchenButton;","import React, { Component } from 'react';\nimport KitchenButton from './KitchenButton';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component {\n    render(){\n    return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                <Link to='/' className=\"navbar-brand\">\n                    <img src=\"https://image.flaticon.com/icons/png/512/123/123278.png\" width=\"30\" height=\"30\" className=\"mr-2\" alt=\"\"/>\n                    Burger Queen\n                </Link>\n                <KitchenButton />\n            </nav>\n        );\n    }\n}\nexport default Navbar;","import React, { Component } from 'react';\nimport { plates } from '../../todo.json';\n\nclass ClientMenu extends Component {\n  constructor(){\n      super()\n      this.state = {\n          plates,\n          toShow : [],\n      }\n      this.handleBreakfastButton = this.handleBreakfastButton.bind(this);\n      this.handleLunchButton = this.handleLunchButton.bind(this);\n  }\n  handleBreakfastButton(e){\n      e.preventDefault();\n      this.setState({\n          ...this.state,\n          toShow: this.state.plates.filter(plate => {\n              return plate.type === \"desayuno\"\n            })\n      })\n    }\n    handleLunchButton(e){\n        e.preventDefault();\n        this.setState({\n            ...this.state,\n            toShow: this.state.plates.filter(plate => {\n                return plate.type === \"restodia\"\n            })\n        })  \n    }\n    render() {\n        return(\n            <div className=\"menu\">\n                <button className=\"btn btn-lg btn-warning mt-2\" onClick={this.handleBreakfastButton}>Desayuno</button>\n                <button className=\"btn btn-lg btn-warning ml-2 mt-2\" onClick={this.handleLunchButton}>Almuerzo y Cena</button>\n                    <div className=\"row\">\n                    {this.state.toShow.map((plate, i) => {\n                        return(\n                            <div key={i} className=\"col-md-4\">\n                                <button className=\"btn btn-success btn-lg mt-2\" onClick={()=>{\n                                    const name = plate.name;\n                                    const cost = plate.cost;\n                                    this.props.items(name, cost);\n                                    }}>\n                                            { plate.name } <br/>\n                                            ${plate.cost} \n                                </button>\n                            </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n        );\n    }\n}\nexport default ClientMenu;","import React, { Component } from 'react';\n\nclass ClientListOrder extends Component{\n\n    deleteItem = (e) => {\n        e.preventDefault()\n        alert(\"no logro eliminarme D:\")\n    }\n    render(){\n    return (\n        <div>\n        {this.props.orderList.map((item, i) => {\n            return (\n                <div key={i} className=\"row\">\n                    <div className=\"col-md-6\">\n                        {item.name}\n                    </div>\n                    <div className=\"col-md-4\">\n                        ${item.cost}\n                    </div>\n                    <div className=\"col-md-2\">\n                        <a href=\"#\" onClick={this.deleteItem}>\n                            <i className=\"material-icons\">\n                            cancel\n                            </i>\n                        </a>\n                    </div>\n                </div>\n            )\n        })}\n        </div>\n    )\n}\n}\nexport default ClientListOrder;","import React, { Component } from 'react'\n\nclass ClientBill extends Component {\n    render(){\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                <p className=\"text-warning text-left\">Monto total: ${this.props.orderResult.reduce((accum, currentValue) => {\n    return accum + parseInt(currentValue.cost)}, 0)}</p>\n            </div>\n        </div>\n    )\n    }   \n}\n\nexport default ClientBill;","import React, { Component } from 'react';\nimport ClientOrderList from './ClientListOrder';\nimport ClientBill from './ClientBill'\nimport { addOrder } from '../../store/actions/orderActions';\nimport { connect } from 'react-redux';\n\nclass ClientOrder extends Component {\nconstructor(){\n    super();\n    this.state = {\n        name: \"\",\n        food: [],\n        }\n    this.handleData = this.handleData.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n}\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            ...this.state,\n            name: e.target.value,\n            food: this.props.order.map(food => {return food.name})\n        })\n    }\n    handleData = (e) => {\n        e.preventDefault();\n        this.props.addOrder(this.state)\n    }\n    render(){\n        return (\n                <form onSubmit={this.handleData}>\n                    <label>Nombre del Cliente: </label>\n                    <input type=\"text\" className=\"form-control\" onChange={this.handleChange} />\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <p className=\"text-info\">Items</p>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <p className=\"text-info\">Precio</p>\n                        </div>\n                        <div className=\"col-md-2\">\n                        </div>\n                    </div>\n                    <ClientOrderList orderList={this.props.order} />\n                    <ClientBill orderResult={this.props.order} />\n                    <input type=\"submit\" className=\"btn btn-info mt-2\" value=\"SUBMIT\"/>\n                </form>\n        )\n    }\n}\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        addOrder: (order) => dispatch(addOrder(order))\n    }\n}\nexport default connect(null, mapDispatchtoProps)(ClientOrder);","export const addOrder = (order) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n\n        firestore.collection(\"orders\").add({\n            ...order,\n        }).then(() => {\n            dispatch({ type: 'ADD_ORDER', order})\n        }).catch((err) => {\n            dispatch({type: 'ADD_ORDER_ERROR', err})\n        })\n        \n    }\n}","import React, { Component } from 'react';\nimport ClientMenu from './ClientMenu';\nimport ClientOrder from './ClientOrder.js';\n\n\nexport class Dashboard extends Component {\n  constructor(){\n    super();\n    this.state = {\n      items: []\n    }\n    this.handleFood = this.handleFood.bind(this);\n  }\n  \n  handleFood(name, cost){\n  this.setState({\n    ...this.state,\n    items: this.state.items.concat([{name: name, cost: cost}])\n  })\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n          <div className=\"col-md-6\">\n              <ClientMenu items={this.handleFood}/>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"jumbotron mt-2\">\n              <ClientOrder order={this.state.items}/>\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\n\n\nconst KitchenOrder = ({orders}) => {\n    return(\n        <div className=\"row mt-2\">\n            {orders && orders.map((order) =>{\n                return ( \n                    <div className=\"col-md-4\"  key={order.id}>               \n                <div className=\"card text-white bg-success mb-3\">\n                    <div className=\"card-header\">\n                        {order.name}\n                    </div>\n                    <div className=\"card-body\">\n                        <p className=\"card-text\">\n                        {order.food.join(\", \")}\n                        </p>\n                    </div>\n                </div>\n                </div>\n            )\n            })}\n           \n        </div>\n    )\n}\nexport default KitchenOrder;","import React, { Component } from 'react';\nimport KitchenOrder from './KitchenOrder';  \nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\n\nclass Kitchen extends Component{\n        render(){ \n\n        const { orders } = this.props;\n\n        return(\n            <div className=\"container\">\n                <KitchenOrder orders={orders}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        orders: state.firestore.ordered.orders\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'orders'}\n    ])\n)(Kitchen);","import React, { Component } from 'react';\nimport Navbar from './components/layout/Navbar.js';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Kitchen from './components/Kitchen/Kitchen';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\n\nclass App extends Component{\n    render(){\n        return (\n            <BrowserRouter>\n                <div>\n                    <Navbar/>\n                    <div className=\"container-fluid\">\n                        <Switch>\n                            <Route exact path='/' component={Dashboard}/>\n                            <Route path='/kitchen' component={Kitchen}/>\n                        </Switch>\n                    </div>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    orders: [{\n        clientName: 'Milexys',\n        food: 'cafe',\n    },\n    {\n        clientName: 'Sara',\n        food: 'hamburguesa',\n    }],\n};\n\nconst orderReducer = (state = initState, action) => {\n    switch (action.type){\n        case 'ADD_ORDER':\n            console.log('ADD ORDER', action.order);\n            return state\n        case 'ADD_ORDER_ERROR':\n            console.log('ADD ORDER ERROR', action.err);\n            return state\n        default:\n            return state\n    }\n}\n\nexport default orderReducer;","import orderReducer from './orderReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\n\nconst rootReducer = combineReducers({\n    order: orderReducer,\n    firestore: firestoreReducer,\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/app';\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCzmJJVcoCMtkbGnz6MClhrn_nteobXLDA\",\n    authDomain: \"burgerqueen-milexys.firebaseapp.com\",\n    databaseURL: \"https://burgerqueen-milexys.firebaseio.com\",\n    projectId: \"burgerqueen-milexys\",\n  });\n\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './fbConfig';\n\nconst store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirestore, getFirebase})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig)\n    )\n); \n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}